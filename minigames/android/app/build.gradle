plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}
kotlin {
    jvmToolchain(17)
}

def getEnvValue(String key) {
    //def envFile = rootProject.file(".env") // 최상위 디렉터리에서 .env 파일 찾기
    def envFile = new File(rootProject.projectDir.parent, ".env")
    if (envFile.exists()) {
        println "found env: ${envFile.absolutePath}"
        def env = new Properties()
        env.load(new FileInputStream(envFile))
        return env.getProperty(key)
    } else {
        println "env not found!: ${envFile.absolutePath}"
    }
    return null
}


android {
    namespace = "com.example.minigames"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {

        //jvmTarget = JavaVersion.VERSION_1_8
        jvmTarget = JavaVersion.VERSION_17
        //jvmToolchain(17)
    }
    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(17))  // ✅ JVM Toolchain을 Java 17로 고정
        }

    }
    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.minigames"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion // 이거 21로 바꾸는거 고려해보기
        minSdkVersion 21
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName

        // .env에서 NATIVE_APP_KEY 값을 가져와 BuildConfig에 추가
        def envValue = getEnvValue("NATIVE_APP_KEY")
        buildConfigField "String", "NATIVE_APP_KEY", "\"${envValue}\"" // BuildConfig에 추가

        // AndroidManifest.xml에 값을 전달
        manifestPlaceholders = [
                NATIVE_APP_KEY: envValue
        ]
    }

    buildFeatures {
        buildConfig true // buildConfig 기능 활성화
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}
configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'org.jetbrains.kotlin') {
            details.useVersion "1.8.22"
        }
    }
}